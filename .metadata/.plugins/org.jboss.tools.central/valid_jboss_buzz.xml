<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>This week in JBoss (31 May 2018)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/SdTsH85GTlE/this-week-in-jboss-31-may-2018" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_weeklyeditorial" scheme="searchisko:content:tags" /><category term="hibernate-orm" scheme="searchisko:content:tags" /><category term="hibernate-search" scheme="searchisko:content:tags" /><category term="jboss weekly" scheme="searchisko:content:tags" /><category term="weekly_editorial" scheme="searchisko:content:tags" /><category term="wildfly" scheme="searchisko:content:tags" /><author><name>Jason Porter</name></author><id>searchisko:content:id:jbossorg_blog-this_week_in_jboss_31_may_2018</id><updated>2018-05-31T23:21:44Z</updated><published>2018-05-31T23:21:44Z</published><content type="html">&lt;!-- [DocumentBodyStart:97ded28c-1736-422a-a2c6-907f2e2cee69] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;div&gt;&lt;div&gt;&lt;div class="sectionbody"&gt;&lt;div class="paragraph"&gt;&lt;p&gt;This is a smaller editorial this week, but by no means does that mean we haven&amp;#8217;t been busy!&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="sect1"&gt;&lt;h2&gt;Releases&lt;/h2&gt;&lt;div class="sectionbody"&gt;&lt;div class="ulist"&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2018/05/28/hibernate-orm-531-final-release/" rel="nofollow"&gt;Hibernate 5.3.1&lt;/a&gt; is the first bug-fix release for Hibernate 5.3, a JPA 2.2 implementation.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2018/05/29/hibernate-search-5-10-1-Final-5-9-2-Final-5-6-5-Final/" rel="nofollow"&gt;Hibernate Search triple release&lt;/a&gt;: 5.10.1.Final, 5.9.2.Final, and 5.6.5.Final&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="http://wildfly.org/news/2018/05/30/WildFly13-Final-Released/" rel="nofollow"&gt;Wildfly 13 Baker&amp;#8217;s Dozen&lt;/a&gt; brings Java EE 8 feature completeness! Look for Wildfly 14 to bring full Java EE 8 certification.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="sect1"&gt;&lt;h2&gt;Blogs&lt;/h2&gt;&lt;div class="sectionbody"&gt;&lt;div class="ulist"&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="https://middlewareblog.redhat.com/2018/05/24/an-introduction-to-red-hat-application-migration-toolkit/" rel="nofollow"&gt;Introduction to Red Hat Application Migration Toolkit&lt;/a&gt;. Christian Huffman explores RHAMT and explains how to get started with it to help you migrate your application to Red Hat Enterprise Application Platform.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Doug Tidwell did a great explanation about creating production-ready containers, read the blog at &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2018/05/31/red-hat-summit-building-production-ready-containers/" rel="nofollow"&gt;https://developers.redhat.com/blog/2018/05/31/red-hat-summit-building-production-ready-containers/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Matthias Wessendorf introduces the new &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2018/05/31/introducing-the-kafka-cdi-library/" rel="nofollow"&gt;Kafka CDI Library&lt;/a&gt; over at the Red Hat Developers Blog. This looks like it will be a great library for doing Kafka events with CDI!&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div class="paragraph"&gt;&lt;p&gt;As stated, this was a smaller one this week, but still, some great stuff happening! Everyone have a happy summer!&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:97ded28c-1736-422a-a2c6-907f2e2cee69] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/SdTsH85GTlE" height="1" width="1" alt=""/&gt;</content><summary>This is a smaller editorial this week, but by no means does that mean we haven’t been busy! Releases Hibernate 5.3.1 is the first bug-fix release for Hibernate 5.3, a JPA 2.2 implementation. Hibernate Search triple release: 5.10.1.Final, 5.9.2.Final, and 5.6.5.Final Wildfly 13 Baker’s Dozen brings Java EE 8 feature completeness! Look for Wildfly 14 to bring full Java EE 8 certification. Blogs Intr...</summary><dc:creator>Jason Porter</dc:creator><dc:date>2018-05-31T23:21:44Z</dc:date><feedburner:origLink>https://developer.jboss.org/blogs/weekly-editorial/2018/05/31/this-week-in-jboss-31-may-2018</feedburner:origLink></entry><entry><title>Red Hat Summit: Building production-ready containers</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ayWrMJ1HgEw/" /><category term="Containers" /><category term="Red Hat OpenShift Container Platform" /><category term="Red Hat Summit" /><author><name>Doug Tidwell</name></author><id>https://developers.redhat.com/blog/?p=495767</id><updated>2018-05-31T15:00:00Z</updated><published>2018-05-31T15:00:00Z</published><content type="html">&lt;p&gt;Bringing excitement to the last session on the last day of the show, Scott McCarty and Ben Breard wrapped up this year&amp;#8217;s Red Hat Summit with a discussion of best practices for production-ready containers.&lt;/p&gt; &lt;p&gt;In the container era, Scott pointed out there are four building blocks you need to think about:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Container images&lt;/li&gt; &lt;li&gt;Container hosts&lt;/li&gt; &lt;li&gt;Container orchestration&lt;/li&gt; &lt;li&gt;Registry servers&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Each of these topics is a huge rabbit hole you can go down if you want to really learn all there is to know about them. As you&amp;#8217;d expect from the session title, Scott and Ben focused on container images. Despite that, you still have to consider the other three. How will your images interact with others? How will you get data to them? How will they interact with each other? Will you embed passwords in your images? (Spoiler alert: &lt;em&gt;No.&lt;/em&gt;) You need to take all of these things into consideration as you move into the world of containers.&lt;/p&gt; &lt;p&gt;A single container is about as useful as a single Lego block&lt;a href="#link1"&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;. You need to tie lots of them together in interesting ways to get the full power of containers behind you. Scott quoted Red Hat&amp;#8217;s Ryan Hallisey:&lt;/p&gt; &lt;blockquote&gt;&lt;p&gt;Using containers is as much of a business advantage as a technical one. When building and using containers, layering is crucial. You need to look at your application and think about each of the pieces and how they work together–similar to the way you can break a program up into classes and functions.&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;If you&amp;#8217;re building a Lego model, you take an instruction sheet and a set of building blocks and create something from them. In the world of containers, you take instructions (YAML) and building blocks (images) and create an application from them.&lt;/p&gt; &lt;p&gt;The goal of the &lt;a href="https://www.opencontainers.org"&gt;Open Container Initiative (OCI)&lt;/a&gt; is to define standards for containers and runtimes. (Members include Red Hat, CoreOS, and pretty much every other player in the industry.) If you&amp;#8217;re an architect, OCI protects your investment because you can create images once and know you can use them for the foreseeable future&lt;a href="#link2"&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt; and know that the tooling and the distribution and logistics mechanisms and the registry server will still exist and will still work.&lt;/p&gt; &lt;p&gt;As the old joke goes, the great thing about standards is that you have so many to choose from&lt;a href="#link3"&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt;. Scott mentioned five relevant standards that are being driven by vendors, communities, and standards bodies:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The &lt;a href="https://github.com/opencontainers/image-spec"&gt;OCI Image Specification&lt;/a&gt;&lt;/li&gt; &lt;li&gt;The &lt;a href="https://github.com/opencontainers/distribution-spec"&gt;OCI Distribution Specification&lt;/a&gt;&lt;/li&gt; &lt;li&gt;The &lt;a href="https://github.com/opencontainers/runtime-spec"&gt;OCI Runtime Specification&lt;/a&gt;&lt;/li&gt; &lt;li&gt;The &lt;a href="https://github.com/kubernetes/kubernetes/blob/242a97307b34076d5d8f5bbeb154fa4d97c9ef1d/docs/devel/container-runtime-interface.md"&gt;Container Runtime Interface&lt;/a&gt; (from Kubernetes)&lt;/li&gt; &lt;li&gt;The &lt;a href="https://www.cncf.io/blog/2017/05/23/cncf-hosts-container-networking-interface-cni/"&gt;Container Network Interface&lt;/a&gt; (from the Cloud Native Computing Foundation)&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;When you&amp;#8217;re running a container, there&amp;#8217;s an image, there&amp;#8217;s a registry, and there&amp;#8217;s a host. With the Distribution spec, you&amp;#8217;re protected if you put your images in an Amazon registry, an Azure registry, a Red Hat-provided registry, etc. You can move that image around and run it in another environment.&lt;/p&gt; &lt;p&gt;Scott mentioned a number of tools that are emerging as the standards become more entrenched. The community created &lt;a href="https://github.com/kubernetes-incubator/cri-tools"&gt;crictl&lt;/a&gt; for the CRI standard. &lt;a href="https://www.projectatomic.io/blog/2018/02/reintroduction-podman/"&gt;Podman&lt;/a&gt; (&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux_atomic_host/7/html/release_notes/technology_previews"&gt;now available as a tech preview&lt;/a&gt;) offers an experience similar to the Docker command line. &lt;a href="https://github.com/opencontainers/runc"&gt;runc&lt;/a&gt; is a command-line tool to run containers according to the OCI runtime spec. Project Atomic created the &lt;a href="https://www.projectatomic.io/blog/2017/11/getting-started-with-buildah/"&gt;Buildah&lt;/a&gt; tool to build OCI-compliant images. What&amp;#8217;s great about Buildah is that it will work with your &lt;code&gt;Dockerfile&lt;/code&gt;s. Buildah lets you add packages into the image when you build it, so that your final container doesn&amp;#8217;t have to have a package manager. And of course you can use these tools in a toolchain.&lt;/p&gt; &lt;p&gt;Scott made the point that the Docker commands related to images actually work with repositories, not images. For example, this command:&lt;/p&gt; &lt;blockquote&gt;&lt;p&gt;&lt;code&gt;docker pull registry.access.redhat.com/rhel7/rhel:latest&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;goes to the registry at &lt;code&gt;registry.access.redhat.com&lt;/code&gt;, then looks in the &lt;code&gt;rhel7&lt;/code&gt; namespace, then looks for a repository named &lt;code&gt;rhel&lt;/code&gt;, then takes the version of that image with the tag &lt;code&gt;latest&lt;/code&gt;&lt;a href="#link4"&gt;&lt;sup&gt;4&lt;/sup&gt;&lt;/a&gt;. The hierarchy here is &lt;code&gt;registry server/namespace/repo:tag&lt;/code&gt;. The registry server is resolved by DNS, but the namespace can mean different things depending on the registry server. At &lt;code&gt;registry.access.redhat.com&lt;/code&gt;, the namespace is the product name. At Dockerhub, the namespace is the name of the user who committed the image. In creating images in your own registry, it&amp;#8217;s important to think through what the different components of the name mean. How will your organization use namespaces? How will you name your repos? (A bit of advice from Scott: always use the full URL of the image in your &lt;code&gt;Dockerfile&lt;/code&gt; to make sure you&amp;#8217;re getting exactly what you expect.)&lt;/p&gt; &lt;p&gt;Note: If you&amp;#8217;d like to get a better handle on registries vs. repos and develop a deeper understanding of containers, check out Scott&amp;#8217;s article: &lt;a href="https://developers.redhat.com/blog/2018/02/22/container-terminology-practical-introduction/"&gt;&lt;em&gt;A Practical Introduction to Container Terminology&lt;/em&gt;&lt;/a&gt;. That article, published in February of 2018 on &lt;a href="https://developers.redhat.com/blog"&gt;developers.redhat.com/blog&lt;/a&gt;, is a complete update of Scott&amp;#8217;s popular article from 2016.  The 2018 version includes a lot of what is happening in the world of containers beyond docker.&lt;/p&gt; &lt;p&gt;Next Ben took over to discuss his tenets for building images. He stressed that you should use source control for everything so that all of your artifacts are buildable from code. His five basic principles for building production-ready containers are:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Standardize&lt;/li&gt; &lt;li&gt;Minimize storage&lt;/li&gt; &lt;li&gt;Delegate&lt;/li&gt; &lt;li&gt;Process&lt;/li&gt; &lt;li&gt;Iterate&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;We&amp;#8217;ll discuss these over the next few paragraphs.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Standardize:&lt;/em&gt; Your goal should be to have a standard set of images with a common lineage. Your base images will be things like application frameworks, app servers, databases, and other middleware. The obvious benefits here are that your images are easier to scale, reuse of common layers is maximized, and the differences between environments in your various containers are minimized. The size of registries can be a problem, especially with thousands of developers constantly cranking out images as toolchains and build pipelines do their magic. Standardizing on as few images as possible has huge benefits in your registry, at runtime, and whenever you need to update a base image. (Red Hat encourages you to use our base images, especially the LTS images.)&lt;/p&gt; &lt;p&gt;&lt;em&gt;Minimize storage:&lt;/em&gt; The goal is to limit the content in a given image, particularly a base image, so that it only has what you&amp;#8217;re using. Red Hat provides an image named &lt;a href="https://access.redhat.com/containers/?tab=overview#/registry.access.redhat.com/rhel7-atomic"&gt;rhel7-atomic&lt;/a&gt; (not to be confused with &lt;a href="https://www.projectatomic.io"&gt;Project Atomic&lt;/a&gt;). This image has &lt;code&gt;glibc&lt;/code&gt; and just enough &lt;code&gt;rpm&lt;/code&gt; to add packages. There is no &lt;code&gt;python&lt;/code&gt;, no &lt;code&gt;systemd&lt;/code&gt;, or similar things that you probably don&amp;#8217;t need. Remember, with an image, you&amp;#8217;re building a sandbox. If your sandbox is the size of a stadium parking lot, it&amp;#8217;s not a sandbox anymore.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Delegate:&lt;/em&gt; Ownership of an image should lie with the people who have the most expertise for that image, whatever it contains. Don&amp;#8217;t be a hero; don&amp;#8217;t be responsible for every image in your organization. Leverage your team&amp;#8217;s skills.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Focus on process and automation:&lt;/em&gt; This is the most important rule. The barrier to getting started with containers is really low. It&amp;#8217;s not that much trouble to create a &lt;code&gt;Dockerfile&lt;/code&gt; and run &lt;code&gt;docker build&lt;/code&gt;. That means it&amp;#8217;s simple to do something once and never think about it again. But containers are not &amp;#8220;fire and forget.&amp;#8221; You need process around them for everything from testing to deployment to security. Ben mentioned tools like &lt;a href="https://www.open-scap.org"&gt;OpenSCAP&lt;/a&gt; and &lt;a href="https://coreos.com/clair/docs/latest/"&gt;Clair&lt;/a&gt; that can scan your images for vulnerabilities.&lt;a href="#link5"&gt;&lt;sup&gt;5&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;Iterate&lt;/em&gt; is the final goal. Don&amp;#8217;t repeat the mistakes of the past. Making changes is no longer a big deal. If you have testing and security scanning as part of your build chain, then you go from &amp;#8220;known good&amp;#8221; to &amp;#8220;known good&amp;#8221; every single time.&lt;/p&gt; &lt;p&gt;The image a developer has on her laptop should be the same as the image in the dev/test environment, which should be the same as the image in production in the cloud. (BTW, the term &amp;#8220;developer&amp;#8221; here really means &amp;#8220;anybody who builds an image.&amp;#8221; That could include sys admins or architects or others.) As you distribute an image, the YAML file that defines persistent volumes, secrets, scaling policies, and other metadata should go along with it as well.&lt;/p&gt; &lt;p&gt;Finally, Ben made the point that you need to be building images in a system that has a pipeline. You can build images on your local machine for &lt;a href="https://en.wikipedia.org/wiki/Smoke_testing_(software)"&gt;smoke testing&lt;/a&gt;, but any changes that are significant should be run through the pipeline. It&amp;#8217;s crucial to remember that you can&amp;#8217;t just fire up Docker on a laptop and test your image. To do test anything significant, you&amp;#8217;ll need an environment that can start a Kubernetes cluster, pull down all the images that run together in production, and then start the pipeline. Nobody wants to run a whole orchestrated system on their laptops, but that&amp;#8217;s the only way you can reliably test a set of services that work together.&lt;/p&gt; &lt;p&gt;The hallmark of a great piece of code is not just that it works, but that its architecture is elegant, intuitive, and flexible. Most experienced developers know how to do that. As we go forward, the ability to create a set of elegantly composed containers will be an essential skill. The right amount of functionality in each container, hierarchies of containers that simplify changes and upgrades, and the appropriate use of pipelines are all part of a production-ready, containerized application.&lt;/p&gt; &lt;p&gt;All in all, a great session with lots of best practices and good advice from two highly experienced speakers. If you&amp;#8217;d like to hear all the details, the &lt;a href="https://youtu.be/nizud-1IK9c"&gt;video of Scott and Ben&amp;#8217;s presentation&lt;/a&gt; is one of the &lt;a href="https://developers.redhat.com/blog/2018/05/15/100-red-hat-summit-2018-session-videos-online/"&gt;100+ Red Hat Summit 2018 breakout sessions&lt;/a&gt; you can view online for free&lt;/p&gt; &lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='390' src='https://www.youtube.com/embed/nizud-1IK9c?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;hr /&gt; &lt;p&gt;&lt;a name="link1"&gt;&lt;/a&gt;&lt;sup&gt;1&lt;/sup&gt; Containers on a container ship fit together like Lego blocks, if you think about it. Makes the metaphor even stronger.&lt;/p&gt; &lt;p&gt;&lt;a name="link2"&gt;&lt;/a&gt;&lt;sup&gt;2&lt;/sup&gt; Which is maybe a couple of years. Seriously, how many things do you do today that you didn&amp;#8217;t do in 2015?&lt;/p&gt; &lt;p&gt;&lt;a name="link3"&gt;&lt;/a&gt;&lt;sup&gt;3&lt;/sup&gt; I didn&amp;#8217;t say the joke was funny, I just said it was old. Sorry about that.&lt;/p&gt; &lt;p&gt;&lt;a name="link4"&gt;&lt;/a&gt;&lt;sup&gt;4&lt;/sup&gt; Keep in mind that the tag &amp;#8220;latest&amp;#8221; is just a convention. It may or may not point to the most recent version of the image.&lt;/p&gt; &lt;p&gt;&lt;a name="link5"&gt;&lt;/a&gt;&lt;sup&gt;5&lt;/sup&gt; Ben recommended reading &lt;a href="https://itrevolution.com/wp-content/uploads/files/PhoenixProjectExcerpt.pdf"&gt;&lt;em&gt;The Phoenix Project&lt;/em&gt;&lt;/a&gt; as a cautionary tale.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fred-hat-summit-building-production-ready-containers%2F&amp;#38;linkname=Red%20Hat%20Summit%3A%20Building%20production-ready%20containers" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fred-hat-summit-building-production-ready-containers%2F&amp;#38;linkname=Red%20Hat%20Summit%3A%20Building%20production-ready%20containers" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fred-hat-summit-building-production-ready-containers%2F&amp;#38;linkname=Red%20Hat%20Summit%3A%20Building%20production-ready%20containers" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fred-hat-summit-building-production-ready-containers%2F&amp;#38;linkname=Red%20Hat%20Summit%3A%20Building%20production-ready%20containers" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fred-hat-summit-building-production-ready-containers%2F&amp;#38;linkname=Red%20Hat%20Summit%3A%20Building%20production-ready%20containers" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fred-hat-summit-building-production-ready-containers%2F&amp;#38;linkname=Red%20Hat%20Summit%3A%20Building%20production-ready%20containers" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fred-hat-summit-building-production-ready-containers%2F&amp;#38;linkname=Red%20Hat%20Summit%3A%20Building%20production-ready%20containers" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fred-hat-summit-building-production-ready-containers%2F&amp;#38;linkname=Red%20Hat%20Summit%3A%20Building%20production-ready%20containers" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fred-hat-summit-building-production-ready-containers%2F&amp;#38;title=Red%20Hat%20Summit%3A%20Building%20production-ready%20containers" data-a2a-url="https://developers.redhat.com/blog/2018/05/31/red-hat-summit-building-production-ready-containers/" data-a2a-title="Red Hat Summit: Building production-ready containers"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/05/31/red-hat-summit-building-production-ready-containers/"&gt;Red Hat Summit: Building production-ready containers&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ayWrMJ1HgEw" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Bringing excitement to the last session on the last day of the show, Scott McCarty and Ben Breard wrapped up this year&amp;#8217;s Red Hat Summit with a discussion of best practices for production-ready containers. In the container era, Scott pointed out there are four building blocks you need to think about: Container images Container hosts [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/05/31/red-hat-summit-building-production-ready-containers/"&gt;Red Hat Summit: Building production-ready containers&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/05/31/red-hat-summit-building-production-ready-containers/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">495767</post-id><dc:creator>Doug Tidwell</dc:creator><dc:date>2018-05-31T15:00:00Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/05/31/red-hat-summit-building-production-ready-containers/</feedburner:origLink></entry><entry><title>Introducing the Kafka-CDI Library</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/rdmbSfcmg6g/" /><category term="Java" /><category term="Modern App Dev" /><category term="Red Hat OpenShift Container Platform" /><category term="Apache Kafka" /><category term="big data" /><category term="event-driven applications" /><category term="event-driven architecture" /><category term="Kafka streams" /><category term="Kafka-CDI" /><category term="microservices" /><author><name>Matthias Wessendorf</name></author><id>https://developers.redhat.com/blog/?p=497637</id><updated>2018-05-31T09:00:54Z</updated><published>2018-05-31T09:00:54Z</published><content type="html">&lt;p&gt;Using Apache Kafka in modern event-driven applications is pretty popular. For a better &lt;em&gt;cloud-native&lt;/em&gt; experience with Apache Kafka, it&amp;#8217;s highly recommended to check out Red Hat &lt;a href="https://developers.redhat.com/blog/2018/05/07/announcing-amq-streams-apache-kafka-on-openshift/" rel="nofollow"&gt;AMQ Streams&lt;/a&gt;, which offers an easy installation and management of an Apache Kafka cluster on Red Hat OpenShift.&lt;/p&gt; &lt;p&gt;This article shows how the Kafka-CDI library can handle difficult setup tasks and make creating Kafka-powered event-driven applications for MicroProfile and Jakarta EE very easy.&lt;/p&gt; &lt;p&gt;&lt;span id="more-497637"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Vanilla Apache Kafka Consumers&lt;/h2&gt; &lt;p&gt;While the concepts of Kafka producers and consumers are simple, writing the actual code can be quiet cumbersome and requires some boilerplate code such as the following:&lt;/p&gt; &lt;pre&gt;final Properties props = new Properties(); props.put(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, "my-cluster-kafka:9092"); props.put(ConsumerConfig.GROUP_ID_CONFIG, "demo-group"); props.put(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class); props.put(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class); final KafkaConsumer&amp;#60;String, String&amp;#62; consumer = new KafkaConsumer(props); ... consumer.subscribe(Collections.singleton("topic")); ... final ConsumerRecords&amp;#60;String, String&amp;#62; records = consumer.poll(500); for (final ConsumerRecord&amp;#60;String, String&amp;#60;&amp;#62; record : records) { logger.info(record.value()); } &lt;/pre&gt; &lt;p&gt;The above code shows a simple configuration of a &lt;code&gt;KafkaConsumer&lt;/code&gt;, which leaves the developer with a few tasks such as manually defining the actual type of the key and the value of the consumed record. Besides that, the consumers are also not thread-safe and the developer needs to take care of that using Java concurrency APIs.&lt;/p&gt; &lt;h2&gt;CDI Extensions to the Rescue&lt;/h2&gt; &lt;p&gt;In various enterprise Java communities, such as &lt;a href="https://microprofile.io/" rel="nofollow"&gt;Eclipse MicroProfile&lt;/a&gt; or &lt;a href="https://jakarta.ee/" rel="nofollow"&gt;Jakarta EE&lt;/a&gt;, CDI is the natural choice for managing dependencies and their configuration. The API also allows developers to create extensions that can leverage the entire &amp;#8220;Java EE&amp;#8221; lifecycle and its powerful platform APIs as well.&lt;/p&gt; &lt;p&gt;The &lt;a href="https://github.com/aerogear/kafka-cdi"&gt;Kafka-CDI&lt;/a&gt; library from the AeroGear project is such an extension, and it makes creating Kafka-powered applications for MicroProfile or Jakarta EE very easy.&lt;/p&gt; &lt;h2&gt;Kafka-CDI in Action&lt;/h2&gt; &lt;p&gt;The setup is simple and requires just a few lines of Maven coordinates:&lt;/p&gt; &lt;pre&gt;&amp;#60;dependency&amp;#62; &amp;#60;groupId&amp;#62;org.aerogear.kafka&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;kafka-cdi-extension&amp;#60;/artifactId&amp;#62; &amp;#60;version&amp;#62;0.1.0&amp;#60;/version&amp;#62; &amp;#60;/dependency&amp;#62;&lt;/pre&gt; &lt;h2&gt;Consumers with CDI&lt;/h2&gt; &lt;p&gt;Creating CDI-managed beans that act as message consumers is now quite easy and requires only a small bit of code:&lt;/p&gt; &lt;pre&gt;@KafkaConfig(bootstrapServers ="#{KAFKA_SERVICE_HOST}:#{KAFKA_SERVICE_PORT}") public class MyAwesomeConsumer { private static final Logger LOGGER = LoggerFactory.getLogger(MyAwesomeConsumer.class); @Consumer(topics = "topic", groupId = "demo-group") public void onMessage(final String key, final String value) { LOGGER.info("We got this value: " + value); } }&lt;/pre&gt; &lt;p&gt;With a single &lt;code&gt;@Consumer&lt;/code&gt; annotation, the bean is turned into a message consumer. The Kafka-CDI extension handles all the configuration, such as the type deserialization for the key and value of the Kafka record, as well as the threading behind the scenes. For each application, one &lt;code&gt;KafkaConfig&lt;/code&gt; annotation is needed to identify the list of available bootstrap servers. The values for &lt;code&gt;topic&lt;/code&gt;, &lt;code&gt;groupId&lt;/code&gt;, and &lt;code&gt;bootstrapServers&lt;/code&gt;, as in this example, can be resolved using environment variables or system properties.&lt;/p&gt; &lt;h2&gt;Producers with CDI&lt;/h2&gt; &lt;p&gt;Writing producers is easy as well:&lt;/p&gt; &lt;pre&gt;@Producer private SimpleKafkaProducer&amp;#60;String, String&amp;#62; myproducer; ... myproducer.send("topic", myKey, myValue); &lt;/pre&gt; &lt;p&gt;Any bean can be injected with a convenient producer (&lt;code&gt;SimpleKafkaProducer&lt;/code&gt;) that can be used in any method for sending messages to the Kafka cluster. Similar to the consumer example, the CDI extension handles the type serialization for the key and value.&lt;/p&gt; &lt;h2&gt;KStreams with CDI&lt;/h2&gt; &lt;p&gt;Last but not least, the library has some initial support for working with the &lt;a href="http://kafka.apache.org/11/documentation/streams/" rel="nofollow"&gt;Kafka Streams&lt;/a&gt; API:&lt;/p&gt; &lt;pre&gt;@KafkaStream(input = "input.topic", output = "output.topic") public KTable&amp;#60;String, Long&amp;#62; successfullMessagesPerJobTransformer(KStream&amp;#60;String, String&amp;#62; source) { return successCountsPerJob = source.filter((key, value) -&amp;#62; value.equals("Success")) .groupByKey() .count("successCounter"); }&lt;/pre&gt; &lt;p&gt;When a method is annotated with &lt;code&gt;@KafkaStream&lt;/code&gt;, the library processes the passed &lt;code&gt;KStream&lt;/code&gt; object by executing the annotated method. The &lt;code&gt;input&lt;/code&gt; and &lt;code&gt;output&lt;/code&gt; attributes from the &lt;code&gt;@KafkaStream&lt;/code&gt; annotation tell the library which topic to read from and which topic the stream processing job should be written to. The type serialization and deserialization are again handled by the framework for the convenience of the developer.&lt;/p&gt; &lt;h2&gt;Supported Types&lt;/h2&gt; &lt;p&gt;The library  supports various ways for JSON serialization and deserialization. It comes with &lt;code&gt;Serializer&lt;/code&gt; and &lt;code&gt;Deserializer&lt;/code&gt; for the &lt;code&gt;javax.json.Json&lt;/code&gt; type, and it has a fallback mechanism to automatically use the Jackson library for any unknown type. Support for Apache Avro is not yet implemented but that is on the roadmap of features.&lt;/p&gt; &lt;h1&gt;Conclusion&lt;/h1&gt; &lt;p&gt;This article was an introduction to the Kafka-CDI library in action. Only a few lines of code are required to get started with the library. The focus is on user simplicity, while all the difficult setup tasks are handled by the CDI extension.&lt;/p&gt; &lt;p&gt;Using the library, it&amp;#8217;s a no-brainer to write event-driven applications using MicroProfile implementations such &lt;a href="https://thorntail.io/" rel="nofollow"&gt;Thorntail&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Thanks to Gunnar Morling for valuable input!&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fintroducing-the-kafka-cdi-library%2F&amp;#38;linkname=Introducing%20the%20Kafka-CDI%20Library" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fintroducing-the-kafka-cdi-library%2F&amp;#38;linkname=Introducing%20the%20Kafka-CDI%20Library" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fintroducing-the-kafka-cdi-library%2F&amp;#38;linkname=Introducing%20the%20Kafka-CDI%20Library" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fintroducing-the-kafka-cdi-library%2F&amp;#38;linkname=Introducing%20the%20Kafka-CDI%20Library" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fintroducing-the-kafka-cdi-library%2F&amp;#38;linkname=Introducing%20the%20Kafka-CDI%20Library" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fintroducing-the-kafka-cdi-library%2F&amp;#38;linkname=Introducing%20the%20Kafka-CDI%20Library" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fintroducing-the-kafka-cdi-library%2F&amp;#38;linkname=Introducing%20the%20Kafka-CDI%20Library" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fintroducing-the-kafka-cdi-library%2F&amp;#38;linkname=Introducing%20the%20Kafka-CDI%20Library" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fintroducing-the-kafka-cdi-library%2F&amp;#38;title=Introducing%20the%20Kafka-CDI%20Library" data-a2a-url="https://developers.redhat.com/blog/2018/05/31/introducing-the-kafka-cdi-library/" data-a2a-title="Introducing the Kafka-CDI Library"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/05/31/introducing-the-kafka-cdi-library/"&gt;Introducing the Kafka-CDI Library&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/rdmbSfcmg6g" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Using Apache Kafka in modern event-driven applications is pretty popular. For a better cloud-native experience with Apache Kafka, it&amp;#8217;s highly recommended to check out Red Hat AMQ Streams, which offers an easy installation and management of an Apache Kafka cluster on Red Hat OpenShift. This article shows how the Kafka-CDI library can handle difficult setup tasks and make [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/05/31/introducing-the-kafka-cdi-library/"&gt;Introducing the Kafka-CDI Library&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/05/31/introducing-the-kafka-cdi-library/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">497637</post-id><dc:creator>Matthias Wessendorf</dc:creator><dc:date>2018-05-31T09:00:54Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/05/31/introducing-the-kafka-cdi-library/</feedburner:origLink></entry><entry><title>WildFly 13 "Baker’s Dozen" is released!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/z6WfihGothk/" /><category term="Announcement" scheme="searchisko:content:tags" /><category term="feed_group_name_jbossas" scheme="searchisko:content:tags" /><category term="feed_name_wildfly" scheme="searchisko:content:tags" /><category term="release" scheme="searchisko:content:tags" /><author><name>Jason Greene</name></author><id>searchisko:content:id:jbossorg_blog-wildfly_13_baker_s_dozen_is_released</id><updated>2018-05-31T03:48:53Z</updated><published>2018-05-31T03:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;WildFly 13 Final is now available &lt;a href="http://wildfly.org/downloads"&gt;for download&lt;/a&gt;!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_ee8_capabilities_new_release_model"&gt;EE8 Capabilities &amp;amp; New Release Model&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This is our second release following our &lt;a href="http://lists.jboss.org/pipermail/wildfly-dev/2017-December/006250.html"&gt;new quarterly delivery model&lt;/a&gt;. A central theme of this plan, is to deliver EE8 functionality in fully completed incremental chunks, as opposed to waiting for everything to finish in a big bang relase. WildFly 13 largely accomplishes this goal, by achieving EE8 feature completeness. WildFly 14 will focus on achieving formal certification, and converting over to a sole EE8 execution model. Since Java EE8 is fully backwards compatible, EE7 deployments will still function ast they do today.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;An overview of all changes for the EE8 execution mode are as follows:&lt;/p&gt; &lt;/div&gt; &lt;table class="tableblock frame-all grid-all spread"&gt; &lt;colgroup&gt; &lt;col style="width: 20%;" /&gt; &lt;col style="width: 20%;" /&gt; &lt;col style="width: 20%;" /&gt; &lt;col style="width: 20%;" /&gt; &lt;col style="width: 20%;" /&gt; &lt;/colgroup&gt; &lt;thead&gt; &lt;tr&gt; &lt;th class="tableblock halign-left valign-top"&gt;Name&lt;/th&gt; &lt;th class="tableblock halign-left valign-top"&gt;From Version&lt;/th&gt; &lt;th class="tableblock halign-left valign-top"&gt;From JSR&lt;/th&gt; &lt;th class="tableblock halign-left valign-top"&gt;To Version&lt;/th&gt; &lt;th class="tableblock halign-left valign-top"&gt;To JSR&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;Java Servlet&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;3.1&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;JSR-340&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;4.0&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;&lt;a href="https://jcp.org/en/jsr/detail?id=370"&gt;JSR-369&lt;/a&gt;&lt;/p&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;Contexts and Dependency Injection for Java&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;1.2&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;JSR-346&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;2.0&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;&lt;a href="https://jcp.org/en/jsr/detail?id=365"&gt;JSR-365&lt;/a&gt;&lt;/p&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;Bean Validation&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;1.1&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;JSR-349&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;2.0&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;&lt;a href="https://jcp.org/en/jsr/detail?id=380"&gt;JSR-380&lt;/a&gt;&lt;/p&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;JavaServer Faces&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;2.2&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;JSR-344&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;2.3&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;&lt;a href="https://jcp.org/en/jsr/detail?id=372"&gt;JSR-372&lt;/a&gt;&lt;/p&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;JavaMail&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;1.5&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;JSR-919&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;1.6&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;&lt;a href="https://jcp.org/en/jsr/detail?id=919"&gt;JSR-919&lt;/a&gt;&lt;/p&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;Java API for RESTFul Web Services&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;2.0&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;JSR-339&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;2.1&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;&lt;a href="https://jcp.org/en/jsr/detail?id=370"&gt;JSR-370&lt;/a&gt;&lt;/p&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;Java API for JSON Processing&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;1.0&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;JSR-353&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;1.1&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;&lt;a href="https://jcp.org/en/jsr/detail?id=374"&gt;JSR-374&lt;/a&gt;&lt;/p&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;Java API for JSON Binding&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;-&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;-&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;1.0&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;&lt;a href="https://jcp.org/en/jsr/detail?id=367"&gt;JSR-367&lt;/a&gt;&lt;/p&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;Common Annotations for the Java Platform&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;1.2&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;JSR-250&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;1.3&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;&lt;a href="http://download.oracle.com/otndocs/jcp/common_annotations-1_3-mrel3-spec/"&gt;JSR-250&lt;/a&gt;&lt;/p&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;Java EE Security&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;-&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;-&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;1.0&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;&lt;a href="https://jcp.org/en/jsr/detail?id=375"&gt;JSR-375&lt;/a&gt;&lt;/p&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;Java Persistence&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;2.1&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;JSR-338&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;2.2&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;&lt;a href="https://jcp.org/en/jsr/detail?id=338"&gt;JSR-338&lt;/a&gt;&lt;/p&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;div class="paragraph"&gt; &lt;p&gt;By default WildFly 13 launches in EE7 mode. In order to use these new capabilities you have to enable EE8 preview mode. This can be accomplished by passing the &lt;code&gt;ee8.preview.mode&lt;/code&gt; property during startup:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="bash"&gt;./standalone.sh -Dee8.preview.mode=true&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Alternatively, this can be achieved by launching the server using the new &lt;code&gt;standalone-ee8.xml&lt;/code&gt; configuration, which simply includes the property in the config.&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="bash"&gt;./standalone.sh -c standalone-ee8.xml&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The CLI can also be used to modify the existing configuration to add this property. For example:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="bash"&gt;embed-server --admin-only=true /system-property=ee8.preview.mode:add(value=true) stop-embedded-server&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_other_notable_items"&gt;Other Notable Items&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;WildFly 13 is now internally built using project Galleon, a new provisioning model for WildFly we plan to roll out in coming releases&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Java 10 compatibilty has been improved&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A major upgrade to the WildFly administration console (HAL version 3)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Infinispan has been updated to 9.2&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Hibernate ORM has been updated to 5.3 when running in EE8 mode&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_jira_release_notes"&gt;Jira Release Notes&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The full list of issues resolved is available &lt;a href="https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12313721&amp;amp;version=12335641"&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/z6WfihGothk" height="1" width="1" alt=""/&gt;</content><summary>WildFly 13 Final is now available for download! EE8 Capabilities &amp; New Release Model This is our second release following our new quarterly delivery model. A central theme of this plan, is to deliver EE8 functionality in fully completed incremental chunks, as opposed to waiting for everything to finish in a big bang relase. WildFly 13 largely accomplishes this goal, by achieving EE8 feature comple...</summary><dc:creator>Jason Greene</dc:creator><dc:date>2018-05-31T03:00:00Z</dc:date><feedburner:origLink>http://wildfly.org/news/2018/05/30/WildFly13-Final-Released/</feedburner:origLink></entry><entry><title>WildFly 13 released, featuring all latest Hibernate versions!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/d2Ju2Q8DTAs/" /><category term="feed_group_name_hibernate" scheme="searchisko:content:tags" /><category term="feed_name_inrelationto" scheme="searchisko:content:tags" /><category term="releases" scheme="searchisko:content:tags" /><category term="wildfly" scheme="searchisko:content:tags" /><author><name>Sanne Grinovero</name></author><id>searchisko:content:id:jbossorg_blog-wildfly_13_released_featuring_all_latest_hibernate_versions</id><updated>2018-05-31T14:34:33Z</updated><published>2018-05-31T00:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Last night the modern JakartaEE server WildFly &lt;a href="http://wildfly.org/news/2018/05/30/WildFly13-Final-Released/"&gt;released the 13th version&lt;/a&gt; and among the list of enhancements you can find an update to all included Hibernate libraries.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Actually it includes both sets of old and new versions of Hibernate libraries!&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;WildFly 13, like version 12, aims at JavaEE 7 certification so if you start it via its default configuration you will get the old set of Hibernate libraries: Hibernate ORM &lt;code&gt;5.1.x&lt;/code&gt; to implement the &lt;code&gt;JPA 2.1&lt;/code&gt; specification, the older matching Hibernate Search, and the old Hibernate Validator providing the &lt;code&gt;Bean Validation 1.1&lt;/code&gt; implementation.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The full JavaEE 8 server is expected to be implemented by WildFly 14 - however the version released today can give you a taste of most of the EE8 implementations already by enabling a flag:&lt;/p&gt; &lt;/div&gt; &lt;div class="literalblock"&gt; &lt;div class="content"&gt; &lt;pre&gt;./standalone.sh -Dee8.preview.mode=true&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Especially if you don’t care about an all-or-nothing approach and are good with having a combination of some specifications at EE7 and some others at EE8, this means you can start benefiting from the new features today!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="new-hibernate-versions-in-the-ee8-preview-mode"&gt;&lt;a class="anchor" href="#new-hibernate-versions-in-the-ee8-preview-mode"&gt;&lt;/a&gt;New Hibernate versions in the "EE8 Preview Mode"&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;When enabling the &lt;code&gt;ee8.preview.mode=true&lt;/code&gt; property, rather than the old stack your applications will get the latest Hibernate libraries, freshly released just some days ago.&lt;/p&gt; &lt;/div&gt; &lt;div class="dlist"&gt; &lt;dl&gt; &lt;dt class="hdlist1"&gt;Hibernate ORM 5.3.1.Final&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Implements JPA 2.2, and &lt;a href="http://in.relation.to/2018/05/14/hibernate-orm-530-final-release/"&gt;a whole lot of improvements across the board: new features, enhanced performance&lt;/a&gt;.&lt;/p&gt; &lt;/dd&gt; &lt;dt class="hdlist1"&gt;Hibernate Search 5.10.1.Final&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;While the main reason to update it is to align dependencies with Hibernate ORM, it implies lots of improvements as we jump from versions &lt;code&gt;5.5&lt;/code&gt; to &lt;code&gt;5.10&lt;/code&gt;. In particular Hibernate Search now features &lt;a href="https://docs.jboss.org/hibernate/stable/search/reference/en-US/html_single/#elasticsearch-integration"&gt;Elasticsearch integration&lt;/a&gt;. This integration is not included in WildFly but can be easily added - we’ll follow up with detailed instructions soon.&lt;/p&gt; &lt;/dd&gt; &lt;dt class="hdlist1"&gt;Hibernate Validator 6.0.10.Final&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Reference implementation of the &lt;a href="http://beanvalidation.org/"&gt;Bean Validation 2.0&lt;/a&gt; specification, bringing &lt;a href="http://in.relation.to/2017/08/07/and-here-comes-hibernate-validator-60/"&gt;among other features&lt;/a&gt; container element constraints and &lt;a href="http://in.relation.to/2018/03/20/bean-validation-benchmark-rerevisited/"&gt;massive performance improvements&lt;/a&gt;.&lt;/p&gt; &lt;/dd&gt; &lt;/dl&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="what-about-hibernate-ogm"&gt;&lt;a class="anchor" href="#what-about-hibernate-ogm"&gt;&lt;/a&gt;What about Hibernate OGM?&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Hibernate OGM is not included in WildFly but - as usual - we release "feature packs" to make it easy to add it yourself.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Similar feature packs exist already but they target WildFly 12, we will update the project to target WildFly 13 soon so watch this space!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="your-help-is-needed"&gt;&lt;a class="anchor" href="#your-help-is-needed"&gt;&lt;/a&gt;Your help is needed!&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;While we’re very excited that WildFly users can finally benefit from the result of the last few years of work of the Hibernate community, we’re not off the hook yet:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;enabling the &lt;em&gt;ee8.preview.mode=true&lt;/em&gt; switch is clearly meant to be a preview.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We’ve been working hard to make it easy to update existing applications to the latest Hibernate versions: please follow the respective migration guides for the essential steps, yet if you end up having trouble please let us know!&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can ask on the &lt;a href="https://discourse.hibernate.org/"&gt;new forums&lt;/a&gt;, or create an issue on &lt;a href="https://hibernate.atlassian.net"&gt;JIRA&lt;/a&gt;. If you could check for existing and similar issues to avoid duplicates and provide details / reproducers / a test that’s incredibily helpful!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/d2Ju2Q8DTAs" height="1" width="1" alt=""/&gt;</content><summary>Last night the modern JakartaEE server WildFly released the 13th version and among the list of enhancements you can find an update to all included Hibernate libraries. Actually it includes both sets of old and new versions of Hibernate libraries! WildFly 13, like version 12, aims at JavaEE 7 certification so if you start it via its default configuration you will get the old set of Hibernate librar...</summary><dc:creator>Sanne Grinovero</dc:creator><dc:date>2018-05-31T00:00:00Z</dc:date><feedburner:origLink>http://in.relation.to/2018/05/31/WildFly13IntegratedLatestHibernate/</feedburner:origLink></entry><entry><title>Adding API Gateway Policies Now Easier With Red Hat 3scale API Management</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/EHDaF4zSqVg/" /><category term="Integration" /><category term="Products" /><category term="Red Hat 3scale API Management" /><category term="3scale" /><category term="Agile Integration" /><category term="api gateway" /><category term="API-Management" /><author><name>Hugo Guerrero</name></author><id>https://developers.redhat.com/blog/?p=498317</id><updated>2018-05-30T16:00:32Z</updated><published>2018-05-30T16:00:32Z</published><content type="html">&lt;p&gt;&lt;span style="font-weight: 400;"&gt;With the May 2018 release of Red Hat 3scale API Management 2.2, adding API Gateway policies to your API management layer is easier than ever. &lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;b&gt;What is a Policy?&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Red Hat 3scale API Management provides units of functionality that modify the behavior of the API Gateway without the need to implement code. These management components are know in 3scale as &lt;b&gt;policies&lt;/b&gt;. The configuration for the bundled policies is available from the API Manager Portal, where you can define the behavior of your API integration. The order in which the policies are executed, known as the “policy chain”, can be configured to introduce differing behavior based on the position of the policy in the chain. Adding custom headers, perform URL rewriting, enable CORS, and configurable caching are some of the most common API gateway capabilities implemented as policies.&lt;/span&gt;&lt;span id="more-498317"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p style="text-align: center;"&gt;&lt;img class=" aligncenter size-full wp-image-498437 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/05/API-Gateway-Policies.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/05/API-Gateway-Policies.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/05/API-Gateway-Policies.png 714w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/API-Gateway-Policies-300x225.png 300w" sizes="(max-width: 714px) 100vw, 714px" /&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;There are various policies available out-of-the-box with 3scale, but you are not limited to those. With 3scale you have complete access to the gateway policy framework to write custom code that implements new API Gateway features on top of the basic APIcast policy built-in to the API Management.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;img class="size-large aligncenter" src="https://access.redhat.com/webassets/avalon/d/Red_Hat_3scale-2.2-API_Devops-en-US/images/1a3aee4bf1ea3193cc7807966bde2291/policyChainOverview.png" alt="3scale standard policies" width="1970" height="632" /&gt;&lt;/p&gt; &lt;h2&gt;&lt;b&gt;3scale Standard Policies&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Red Hat 3scale API Management provides a number of standard policies:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;b&gt;CORS: &lt;span style="font-weight: 400;"&gt;Cross Origin Resource Sharing (CORS) request handling policy—allows you to control CORS behavior&lt;/span&gt;&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;URL rewriting:&lt;/b&gt;&lt;span style="font-weight: 400;"&gt; Allows you to modify the path of a request using the OpenResty web platform sub and gsub operations.&lt;/span&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;Echo:&lt;/b&gt;&lt;span style="font-weight: 400;"&gt; Prints an incoming request back to the client, along with an optional HTTP status code.&lt;/span&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;Adding headers:&lt;/b&gt;&lt;span style="font-weight: 400;"&gt;  Headers policy allows you to modify existing headers or define additional headers to add to or remove from an incoming request or response.&lt;/span&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;Upstream:&lt;/b&gt;&lt;span style="font-weight: 400;"&gt; Allows you to parse a host request header using regular expressions and replace the request header URL with a new URL.&lt;/span&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;SOAP: &lt;/b&gt;&lt;span style="font-weight: 400;"&gt;The SOAP policy matches SOAP action URIs provided in the SOAPAction or Content-Type header of an HTTP request with mapping rules specified in the policy.&lt;/span&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;Offline operation communication: &lt;/b&gt;&lt;span style="font-weight: 400;"&gt; The authentication caching policy caches authentication calls made to the API Gateway. You can configure how the cache operates by selecting an operating mode.&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;&lt;b&gt;Benefits&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;The benefits of 3scale API management&amp;#8217;s modular policy are:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Configuration by data, not code&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Capability to add gateway logic with new policies for any phase of the request cycle&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Better extensibility&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Improved maintainability&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Leverage of community contributions&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Hence, take a look at the following video. It shows an overview on how to enable standard policies in 3scale API Management.&lt;/span&gt;&lt;/p&gt; &lt;p style="text-align: center;"&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='390' src='https://www.youtube.com/embed/836_E_2zZfg?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F30%2F3scale-api-gateway-policies%2F&amp;#38;linkname=Adding%20API%20Gateway%20Policies%20Now%20Easier%20With%20Red%20Hat%203scale%20API%20Management" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F30%2F3scale-api-gateway-policies%2F&amp;#38;linkname=Adding%20API%20Gateway%20Policies%20Now%20Easier%20With%20Red%20Hat%203scale%20API%20Management" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F30%2F3scale-api-gateway-policies%2F&amp;#38;linkname=Adding%20API%20Gateway%20Policies%20Now%20Easier%20With%20Red%20Hat%203scale%20API%20Management" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F30%2F3scale-api-gateway-policies%2F&amp;#38;linkname=Adding%20API%20Gateway%20Policies%20Now%20Easier%20With%20Red%20Hat%203scale%20API%20Management" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F30%2F3scale-api-gateway-policies%2F&amp;#38;linkname=Adding%20API%20Gateway%20Policies%20Now%20Easier%20With%20Red%20Hat%203scale%20API%20Management" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F30%2F3scale-api-gateway-policies%2F&amp;#38;linkname=Adding%20API%20Gateway%20Policies%20Now%20Easier%20With%20Red%20Hat%203scale%20API%20Management" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F30%2F3scale-api-gateway-policies%2F&amp;#38;linkname=Adding%20API%20Gateway%20Policies%20Now%20Easier%20With%20Red%20Hat%203scale%20API%20Management" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F30%2F3scale-api-gateway-policies%2F&amp;#38;linkname=Adding%20API%20Gateway%20Policies%20Now%20Easier%20With%20Red%20Hat%203scale%20API%20Management" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F30%2F3scale-api-gateway-policies%2F&amp;#38;title=Adding%20API%20Gateway%20Policies%20Now%20Easier%20With%20Red%20Hat%203scale%20API%20Management" data-a2a-url="https://developers.redhat.com/blog/2018/05/30/3scale-api-gateway-policies/" data-a2a-title="Adding API Gateway Policies Now Easier With Red Hat 3scale API Management"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/05/30/3scale-api-gateway-policies/"&gt;Adding API Gateway Policies Now Easier With Red Hat 3scale API Management&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/EHDaF4zSqVg" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;With the May 2018 release of Red Hat 3scale API Management 2.2, adding API Gateway policies to your API management layer is easier than ever. What is a Policy? Red Hat 3scale API Management provides units of functionality that modify the behavior of the API Gateway without the need to implement code. These management components [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/05/30/3scale-api-gateway-policies/"&gt;Adding API Gateway Policies Now Easier With Red Hat 3scale API Management&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/05/30/3scale-api-gateway-policies/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">498317</post-id><dc:creator>Hugo Guerrero</dc:creator><dc:date>2018-05-30T16:00:32Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/05/30/3scale-api-gateway-policies/</feedburner:origLink></entry><entry><title>How to install Red Hat CDK 3.4 on Fedora 28</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Pwez7jqw6gM/" /><category term="Container Development Kit" /><category term="CDK" /><category term="Fedora" /><category term="libvirt" /><category term="minishift" /><category term="Red Hat Container Development Kit" /><category term="Red Hat Enterprise Linux" /><category term="Red Hat OpenShift" /><category term="Red Hat OpenShift Container Platform" /><author><name>Robin Owen</name></author><id>https://developers.redhat.com/blog/?p=497897</id><updated>2018-05-30T11:00:15Z</updated><published>2018-05-30T11:00:15Z</published><content type="html">&lt;p&gt;Red Hat Container Development Kit (CDK) provides a single-node Red Hat OpenShift cluster designed to assist with containerized application development. This environment is like a production OpenShift environment, but it is designed to work on a single user&amp;#8217;s computer. For this purpose, CDK runs Red Hat Enterprise Linux and Red Hat OpenShift Container Platform in a virtual machine.&lt;/p&gt; &lt;p&gt;Follow these steps to install CDK 3.4 on Fedora 28:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Set up the virtualization environment.&lt;/li&gt; &lt;li&gt;Install and configure CDK.&lt;/li&gt; &lt;li&gt;Start CDK.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;Below are details for performing these steps.&lt;span id="more-497897"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Set Up the Virtualization Environment&lt;/h2&gt; &lt;p&gt;CDK requires Kernel-based Virtual Machine (KVM)/ &lt;code&gt;libvirt&lt;/code&gt; virtualization technology and the KVM Docker Machine driver plug-in. Perform the following steps to download and configure the required components.&lt;/p&gt; &lt;p&gt;1. Download the KVM driver plug-in and make it executable:&lt;/p&gt; &lt;pre&gt;$ sudo curl -L https://github.com/dhiltgen/docker-machine-kvm/releases/download/v0.7.0/docker-machine-driver-kvm -o /usr/local/bin/docker-machine-driver-kvm $ sudo chmod +x /usr/local/bin/docker-machine-driver-kvm &lt;/pre&gt; &lt;p&gt;2. Install KVM/&lt;code&gt;libvirt&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;$ sudo dnf install libvirt qemu-kvm &lt;/pre&gt; &lt;p&gt;3. Add yourself to the &lt;code&gt;libvirt&lt;/code&gt; group:&lt;/p&gt; &lt;pre&gt;$ sudo usermod -a -G libvirt ${USER} &lt;/pre&gt; &lt;p&gt;4. Update your user session to apply the group change:&lt;/p&gt; &lt;pre&gt;$ newgrp libvirt &lt;/pre&gt; &lt;p&gt;5. Launch &lt;code&gt;libvirtd&lt;/code&gt; and configure it to start at boot:&lt;/p&gt; &lt;pre&gt;$ sudo systemctl start libvirtd $ sudo systemctl enable libvirtd &lt;/pre&gt; &lt;h2&gt;Install and Configure CDK&lt;/h2&gt; &lt;p&gt;1. &lt;a href="https://developers.redhat.com/products/cdk/download/" target="_blank" rel="noopener"&gt;Download CDK&lt;/a&gt; for Linux.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The following steps assume that CDK is placed in the &lt;code&gt;~/Downloads&lt;/code&gt; directory. The file should be named &lt;code&gt;~/Downloads/cdk-3.4.0-2-minishift-linux-amd64&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;2. Create the &lt;code&gt;~/bin&lt;/code&gt; directory and copy CDK to it:&lt;/p&gt; &lt;pre&gt;$ mkdir -p ~/bin $ cp ~/Downloads/cdk-3.4.0-2-minishift-linux-amd64 ~/bin/minishift $ chmod +x ~/bin/minishift &lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The &lt;code&gt;~/bin&lt;/code&gt; directory should already be in your &lt;code&gt;$PATH&lt;/code&gt;. You may use another directory of your choice, but we recommend placing &lt;code&gt;minishift&lt;/code&gt; in your &lt;code&gt;$PATH&lt;/code&gt;. If that is not possible, you can run it as &lt;code&gt;./minishift&lt;/code&gt; from the directory containing &lt;code&gt;minishift&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;3. Set up CDK:&lt;/p&gt; &lt;pre&gt;$ minishift setup-cdk &lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This will create the directory &lt;code&gt;~/.minishift&lt;/code&gt;. This directory includes the virtual machine image and related configuration files.&lt;/p&gt; &lt;h2&gt;Start CDK&lt;/h2&gt; &lt;p&gt;1. You must start CDK using the &lt;code&gt;minishift&lt;/code&gt; binary.&lt;/p&gt; &lt;p&gt;Register the virtual machine running Red Hat Enterprise Linux:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Replace &lt;code&gt;$RED_HAT_USERNAME&lt;/code&gt; and &lt;code&gt;$RED_HAT_PASSWORD&lt;/code&gt; with the credentials you use to install other Red Hat Enterprise Linux systems.&lt;/p&gt; &lt;pre&gt;$ export MINISHIFT_USERNAME="$RED_HAT_USERNAME" $ export MINISHIFT_USERNAME="$RED_HAT_PASSWORD" $ echo "export MINISHIFT_USERNAME=\"$MINISHIFT_USERNAME\"" &amp;#62;&amp;#62; ~/.bashrc $ echo "export MINISHIFT_PASSWORD=\"$MINISHIFT_PASSWORD\"" &amp;#62;&amp;#62; ~/.bashrc &lt;/pre&gt; &lt;p&gt;2. Start CDK:&lt;/p&gt; &lt;pre&gt;$ minishift start &lt;/pre&gt; &lt;p&gt;3. Verify that CDK is running:&lt;/p&gt; &lt;pre&gt;$ minishift status &lt;/pre&gt; &lt;p&gt;Congratulations, CDK is now running on your Fedora 28 system!&lt;/p&gt; &lt;p&gt;See the &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_container_development_kit/3.4/html-single/getting_started_guide/index" target="_blank" rel="noopener"&gt;CDK Getting Started Guide&lt;/a&gt; for more information about using CDK.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F30%2Fhow-to-install-red-hat-cdk-3-4-on-fedora-28%2F&amp;#38;linkname=How%20to%20install%20Red%20Hat%20CDK%203.4%20on%20Fedora%2028" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F30%2Fhow-to-install-red-hat-cdk-3-4-on-fedora-28%2F&amp;#38;linkname=How%20to%20install%20Red%20Hat%20CDK%203.4%20on%20Fedora%2028" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F30%2Fhow-to-install-red-hat-cdk-3-4-on-fedora-28%2F&amp;#38;linkname=How%20to%20install%20Red%20Hat%20CDK%203.4%20on%20Fedora%2028" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F30%2Fhow-to-install-red-hat-cdk-3-4-on-fedora-28%2F&amp;#38;linkname=How%20to%20install%20Red%20Hat%20CDK%203.4%20on%20Fedora%2028" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F30%2Fhow-to-install-red-hat-cdk-3-4-on-fedora-28%2F&amp;#38;linkname=How%20to%20install%20Red%20Hat%20CDK%203.4%20on%20Fedora%2028" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F30%2Fhow-to-install-red-hat-cdk-3-4-on-fedora-28%2F&amp;#38;linkname=How%20to%20install%20Red%20Hat%20CDK%203.4%20on%20Fedora%2028" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F30%2Fhow-to-install-red-hat-cdk-3-4-on-fedora-28%2F&amp;#38;linkname=How%20to%20install%20Red%20Hat%20CDK%203.4%20on%20Fedora%2028" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F30%2Fhow-to-install-red-hat-cdk-3-4-on-fedora-28%2F&amp;#38;linkname=How%20to%20install%20Red%20Hat%20CDK%203.4%20on%20Fedora%2028" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F30%2Fhow-to-install-red-hat-cdk-3-4-on-fedora-28%2F&amp;#38;title=How%20to%20install%20Red%20Hat%20CDK%203.4%20on%20Fedora%2028" data-a2a-url="https://developers.redhat.com/blog/2018/05/30/how-to-install-red-hat-cdk-3-4-on-fedora-28/" data-a2a-title="How to install Red Hat CDK 3.4 on Fedora 28"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/05/30/how-to-install-red-hat-cdk-3-4-on-fedora-28/"&gt;How to install Red Hat CDK 3.4 on Fedora 28&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Pwez7jqw6gM" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Red Hat Container Development Kit (CDK) provides a single-node Red Hat OpenShift cluster designed to assist with containerized application development. This environment is like a production OpenShift environment, but it is designed to work on a single user&amp;#8217;s computer. For this purpose, CDK runs Red Hat Enterprise Linux and Red Hat OpenShift Container Platform in [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/05/30/how-to-install-red-hat-cdk-3-4-on-fedora-28/"&gt;How to install Red Hat CDK 3.4 on Fedora 28&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/05/30/how-to-install-red-hat-cdk-3-4-on-fedora-28/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">497897</post-id><dc:creator>Robin Owen</dc:creator><dc:date>2018-05-30T11:00:15Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/05/30/how-to-install-red-hat-cdk-3-4-on-fedora-28/</feedburner:origLink></entry><entry><title>Using .NET Core in a “Disconnected” Environment</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/3zCXmx1WB-0/" /><category term=".NET Core" /><category term="Modern App Dev" /><category term="Security" /><author><name>Rick Wagner</name></author><id>https://developers.redhat.com/blog/?p=497167</id><updated>2018-05-29T11:00:53Z</updated><published>2018-05-29T11:00:53Z</published><content type="html">&lt;p&gt;Security is a very important consideration when running your custom middleware applications.  The internet can be an unfriendly place.&lt;/p&gt; &lt;p id="EgKHihc"&gt;&lt;img class=" alignnone size-full wp-image-497307 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/05/img_5b070b1b6f9bd.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/05/img_5b070b1b6f9bd.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/05/img_5b070b1b6f9bd.png 549w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/img_5b070b1b6f9bd-258x300.png 258w" sizes="(max-width: 549px) 100vw, 549px" /&gt;&lt;/p&gt; &lt;p&gt;Sometimes middleware users have a requirement for their software to run in a &amp;#8220;&amp;#8216;disconnected&amp;#8221; environment, which is one where the network is not routed to addresses outside the one the local node is on—in other words, no internet.&lt;/p&gt; &lt;p&gt;&lt;span id="more-497167"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p id="onkoVol"&gt;&lt;img class=" alignnone size-full wp-image-497247 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/05/img_5b07074c86b5d.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/05/img_5b07074c86b5d.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/05/img_5b07074c86b5d.png 558w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/img_5b07074c86b5d-243x300.png 243w" sizes="(max-width: 558px) 100vw, 558px" /&gt;&lt;/p&gt; &lt;p&gt;.NET Core applications, such as Java applications built using Maven or Node applications built with npm, often require access to external sources for the libraries they need. With .NET Core, this is often the public NuGet repository.&lt;/p&gt; &lt;p&gt;So what does this mean to .NET Core users in a disconnected environment? It means they cannot build their applications! The requested libraries will not be accessible, so the build will not succeed (at least not in the default configuration).&lt;/p&gt; &lt;p id="qyPpQJB"&gt;&lt;img class=" alignnone size-full wp-image-497277 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/05/img_5b070928402a8.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/05/img_5b070928402a8.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/05/img_5b070928402a8.png 537w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/img_5b070928402a8-150x150.png 150w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/img_5b070928402a8-298x300.png 298w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/img_5b070928402a8-32x32.png 32w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/img_5b070928402a8-50x50.png 50w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/img_5b070928402a8-64x64.png 64w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/img_5b070928402a8-96x96.png 96w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/img_5b070928402a8-128x128.png 128w" sizes="(max-width: 537px) 100vw, 537px" /&gt;&lt;/p&gt; &lt;p&gt;What about running the application?  Luckily, running the application is possible. Once your application is built, you can move the generated binaries to a machine in a disconnected environment where they will properly run. (The same is true of &amp;#8220;published&amp;#8221; applications, which are explicitly meant to be portable.)&lt;/p&gt; &lt;p&gt;Security-conscious users can build applications in an &amp;#8220;exposed&amp;#8221; environment, &lt;strong&gt;examine the artifacts to ensure they contain only verified libraries&lt;/strong&gt;, and then can confidently move them to the disconnected environment.&lt;/p&gt; &lt;p id="lktOZFe"&gt;&lt;img class=" alignnone size-full wp-image-497287 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/05/img_5b070a49e5137.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/05/img_5b070a49e5137.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/05/img_5b070a49e5137.png 558w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/img_5b070a49e5137-300x292.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/img_5b070a49e5137-32x32.png 32w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/img_5b070a49e5137-50x50.png 50w" sizes="(max-width: 558px) 100vw, 558px" /&gt;&lt;/p&gt; &lt;p&gt;Happy coding!&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F29%2Fusing-net-core-in-a-disconnected-environment%2F&amp;#38;linkname=Using%20.NET%20Core%20in%20a%20%E2%80%9CDisconnected%E2%80%9D%20Environment" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F29%2Fusing-net-core-in-a-disconnected-environment%2F&amp;#38;linkname=Using%20.NET%20Core%20in%20a%20%E2%80%9CDisconnected%E2%80%9D%20Environment" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F29%2Fusing-net-core-in-a-disconnected-environment%2F&amp;#38;linkname=Using%20.NET%20Core%20in%20a%20%E2%80%9CDisconnected%E2%80%9D%20Environment" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F29%2Fusing-net-core-in-a-disconnected-environment%2F&amp;#38;linkname=Using%20.NET%20Core%20in%20a%20%E2%80%9CDisconnected%E2%80%9D%20Environment" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F29%2Fusing-net-core-in-a-disconnected-environment%2F&amp;#38;linkname=Using%20.NET%20Core%20in%20a%20%E2%80%9CDisconnected%E2%80%9D%20Environment" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F29%2Fusing-net-core-in-a-disconnected-environment%2F&amp;#38;linkname=Using%20.NET%20Core%20in%20a%20%E2%80%9CDisconnected%E2%80%9D%20Environment" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F29%2Fusing-net-core-in-a-disconnected-environment%2F&amp;#38;linkname=Using%20.NET%20Core%20in%20a%20%E2%80%9CDisconnected%E2%80%9D%20Environment" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F29%2Fusing-net-core-in-a-disconnected-environment%2F&amp;#38;linkname=Using%20.NET%20Core%20in%20a%20%E2%80%9CDisconnected%E2%80%9D%20Environment" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F29%2Fusing-net-core-in-a-disconnected-environment%2F&amp;#38;title=Using%20.NET%20Core%20in%20a%20%E2%80%9CDisconnected%E2%80%9D%20Environment" data-a2a-url="https://developers.redhat.com/blog/2018/05/29/using-net-core-in-a-disconnected-environment/" data-a2a-title="Using .NET Core in a “Disconnected” Environment"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/05/29/using-net-core-in-a-disconnected-environment/"&gt;Using .NET Core in a &amp;#8220;Disconnected&amp;#8221; Environment&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/3zCXmx1WB-0" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Security is a very important consideration when running your custom middleware applications.  The internet can be an unfriendly place. Sometimes middleware users have a requirement for their software to run in a &amp;#8220;&amp;#8216;disconnected&amp;#8221; environment, which is one where the network is not routed to addresses outside the one the local node is on—in other words, [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/05/29/using-net-core-in-a-disconnected-environment/"&gt;Using .NET Core in a &amp;#8220;Disconnected&amp;#8221; Environment&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/05/29/using-net-core-in-a-disconnected-environment/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">497167</post-id><dc:creator>Rick Wagner</dc:creator><dc:date>2018-05-29T11:00:53Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/05/29/using-net-core-in-a-disconnected-environment/</feedburner:origLink></entry><entry><title>JBoss Tools 4.6.0.AM2 for Eclipse Photon.0.M7</title><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/jbossbuzz/~3/kf5nNS7_tTI/4.6.0.am2-for-photon.0.m7.html" /><category term="release" /><category term="jbosstools" /><category term="devstudio" /><category term="jbosscentral" /><author><name>jeffmaury</name></author><id>https://tools.jboss.org/blog/4.6.0.am2-for-photon.0.m7.html</id><updated>2018-05-30T17:33:01Z</updated><published>2018-05-29T00:00:00Z</published><content type="html">&lt;div&gt;&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Happy to announce 4.6.0.AM2 (Developer Milestone 2) build for Eclipse Photon.0.M7.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Downloads available at &lt;a href="https://tools.jboss.org/downloads/jbosstools/photon/4.6.0.AM2.html"&gt;JBoss Tools 4.6.0 AM2&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what-is-new"&gt;&lt;a class="anchor" href="#what-is-new"&gt;&lt;/a&gt;What is New?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Full info is at &lt;a href="https://tools.jboss.org/documentation/whatsnew/jbosstools/4.6.0.AM2.html"&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="general"&gt;&lt;a class="anchor" href="#general"&gt;&lt;/a&gt;General&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="eclipse-photon"&gt;&lt;a class="anchor" href="#eclipse-photon"&gt;&lt;/a&gt;Eclipse Photon&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;JBoss Tools is now targeting Eclipse Photon M7.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="openshift"&gt;&lt;a class="anchor" href="#openshift"&gt;&lt;/a&gt;OpenShift&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="enhanced-spring-boot-support-for-server-adapter"&gt;&lt;a class="anchor" href="#enhanced-spring-boot-support-for-server-adapter"&gt;&lt;/a&gt;Enhanced Spring Boot support for server adapter&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Spring Boot runtime was already supported by the OpenShift server adapter. However, it has one major limitation: files and resources were synchronized between the local workstation and the remote pod(s) only for the main project. If your Spring Boot application had dependencies that were present in the local workspace, any change to a file or resource of one of these dependencies was not handled. This is not true anymore.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="fuse-tooling"&gt;&lt;a class="anchor" href="#fuse-tooling"&gt;&lt;/a&gt;Fuse Tooling&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="camel-rest-dsl-from-wsdl-wizard"&gt;&lt;a class="anchor" href="#camel-rest-dsl-from-wsdl-wizard"&gt;&lt;/a&gt;Camel Rest DSL from WSDL wizard&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;There is a new &lt;em&gt;&amp;quot;Camel Rest DSL from WSDL&amp;quot;&lt;/em&gt; wizard. This wizard wraps the &lt;a href="https://github.com/jboss-fuse/wsdl2rest"&gt;wsdl2rest tool&lt;/a&gt; now included with the Fuse 7 distribution, which takes a WSDL file for a SOAP-based (JAX-WS) web service and generates a combination of CXF-generated code and a Camel REST DSL route to make it accessible using REST operations.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To start, you need an existing Fuse Integration project in your workspace and access to the WSDL for the SOAP service. Then use &lt;em&gt;File→New→Other…​&lt;/em&gt; and select &lt;em&gt;Red Hat Fuse→Camel Rest DSL from WSDL&lt;/em&gt; wizard.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;On the first page of the wizard, select your WSDL and the Fuse Integration project in which to generate the Java code and Camel configuration.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/fusetools/images/wsdl2rest-wizard-page-one.jpg" alt="SOAP to REST Wizard page 1" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;On the second page, you can customize the Java folder path for your generated classes, the folder for the generated Camel file, plus any customization for the SOAP service address and destination REST service address.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/fusetools//images/wsdl2rest-wizard-page-two.jpg" alt="SOAP to REST Wizard page 2" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Click &lt;em&gt;Finish&lt;/em&gt; and the new Camel configuration and associated Java code are generated in your project. The wizard determines whether your project is Blueprint, Spring, or Spring Boot based, and it creates the corresponding artifacts without requiring any additional input. When the wizard is finished, you can open your new Camel file in the Fuse Tooling Route Editor to view what it created.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/fusetools//images/fuse-editor-rest-tab-no-properties.jpg" alt="Fuse Tooling editor Rest Tab" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;That brings us to another new functionality, the REST tab in the Fuse Tooling Route Editor.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="camel-editor-rest-tab"&gt;&lt;a class="anchor" href="#camel-editor-rest-tab"&gt;&lt;/a&gt;Camel Editor REST tab&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Fuse Tooling Route Editor provides a new &lt;em&gt;REST&lt;/em&gt; tab. For this release, the contents of this tab is read-only and includes the following information:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Details for the REST Configuration element including the component (jetty, netty, servlet, etc.), the context path, the port, binding mode (JSON, XML, etc.), and host. There is only one REST Configuration element.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A list of REST elements that collect REST operations. A configuration can have more than one REST element. Each REST element has an associated property page that displays additional details such as the path and the data it consumes or produces.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/fusetools//images/fuse-editor-rest-tab-rest-element-properties.jpg" alt="Fuse Tooling Rest Elements Properties View" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A list of REST operations for the selected REST element. Each of the operations has an associated property page that provides details such as the URI and output type.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/fusetools//images/fuse-editor-rest-tab-rest-operation-properties.jpg" alt="Fuse Tooling Rest Operations Properties View" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For this release, the REST tab is read-only. If you want to edit the REST DSL, use the Route Editor Source tab. When you make changes and save them in the Source tab, the REST tab refreshes to show your updates.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Enjoy!&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Jeff Maury&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/kf5nNS7_tTI" height="1" width="1" alt=""/&gt;</content><summary>Happy to announce 4.6.0.AM2 (Developer Milestone 2) build for Eclipse Photon.0.M7. Downloads available at JBoss Tools 4.6.0 AM2. What is New? Full info is at this page. Some highlights are below. General Eclipse Photon JBoss Tools is now targeting Eclipse Photon M7. OpenShift Enhanced Spring Boot support for server adapter Spring Boot runtime was already supported by the OpenShift server adapter. However, it has one major limitation: files and resources were synchronized between the local workstation and the remote pod(s) only for the main project. If your Spring Boot application had dependencies that were present in the local workspace, any change to a file or resource of one of these dependencies was...</summary><dc:creator>jeffmaury</dc:creator><dc:date>2018-05-29T00:00:00Z</dc:date><feedburner:origLink>https://tools.jboss.org/blog/4.6.0.am2-for-photon.0.m7.html</feedburner:origLink></entry><entry><title>Application Modernization and Migration Tech Talk + Scotland JBug Meetup</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/KEwrS83FxJ0/" /><category term="Cloud" /><category term="Events" /><category term="Modern App Dev" /><category term="containers" /><category term="Developer Events" /><category term="Developers" /><category term="jboss" /><category term="JBoss Middleware" /><category term="JBoss User Group" /><category term="jbug" /><category term="OpenShift Container Platform" /><category term="Red Hat OpenShift" /><author><name>Eric D. Schabell</name></author><id>https://developers.redhat.com/blog/?p=497357</id><updated>2018-05-28T09:00:13Z</updated><published>2018-05-28T09:00:13Z</published><content type="html">&lt;p&gt;I&amp;#8217;m &lt;a href="https://www.soprasteria.co.uk/en/newsroom/event/2018/06/06/default-calendar/sopra-steria-sponsors-jbug-scotland-appdev-in-the-cloud-workshop"&gt;heading back to my friends in Scotland&lt;/a&gt; to speak at the JBoss User Group (JBug) Scotland next month. It&amp;#8217;s a fun group of people who really seem to enjoy working with open source and JBoss software stacks.&lt;/p&gt; &lt;p&gt;First off, on June 6th there will be a wonderful tech talk on application modernization and migration. This is followed by the JBug Scotland hosting a &lt;a href="https://www.schabell.org/2018/05/scotland-jbug-appdev-in-the-cloud-workshop.html"&gt; hands-on workshop&lt;/a&gt;. Come and get hands-on experience in a workshop showcasing application development in the cloud using containers, JBoss middleware, services, business logic, and APIs.&lt;/p&gt; &lt;p&gt;The events are on June 6th, 2018 from 14:00 onwards and are scheduled as follows.&lt;/p&gt; &lt;p&gt;&lt;span id="more-497357"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Tech Talk Agenda&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;14:00–14:30 Registration and coffee&lt;/li&gt; &lt;li&gt;14:30–16:30 Tech talk session&lt;/li&gt; &lt;li&gt;16:30–17:00 Discussion and Q&amp;#38;A&lt;/li&gt; &lt;li&gt;17:00–18:00 Beers and networking&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a href="https://www.redhat.com/en/events/partner-tech-talk-application-modernisation-migration-2018"&gt;Register online here&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="http://bit.ly/scotland-jbug-appdev-in-the-cloud-workshop"&gt;JBug Scotland Agenda&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;17:00–19:30 or so&amp;#8230;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a href="https://www.soprasteria.co.uk/en/newsroom/event/2018/06/06/default-calendar/sopra-steria-sponsors-jbug-scotland-appdev-in-the-cloud-workshop"&gt;Be sure to register online&lt;/a&gt; so the hosting partner, &lt;a href="https://www.soprasteria.co.uk/en"&gt;Sopra Steria&lt;/a&gt;, can order the right amount of food.&lt;/p&gt; &lt;p&gt;Below are the abstracts for the tech talk and JBug Scotland workshop.&lt;/p&gt; &lt;h3&gt;Tech Talk: &lt;a href="https://www.redhat.com/en/events/partner-tech-talk-application-modernisation-migration-2018"&gt;Application Modernization and Migration&lt;/a&gt;&lt;/h3&gt; &lt;p&gt;&lt;em&gt;There is at least one constant in today’s IT landscape and this is change. We suffer from a complexity of ever-changing or out-of-support parts, interfaces, languages, databases, standards, and architectures which when combined run increasingly business critical functions. The art of application migration and modernization is to do it for the right reasons, at the right time, with the right objectives and with the correct level of planning, tooling, and reuse.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;The aim of this tech talk is to cover all the topics around the question &amp;#8220;why change?&amp;#8221; and how to be as prepared as possible. We will cover target platforms, modern application concepts, methodology, and tools. We will share with you the lessons learned by Red Hat and how we approach migration and modernization giving you an insight into the different approaches, skills, and tools used.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;If you are looking at how to start modularizing monoliths, add agility, enable continuous delivery/integration, manage old while working toward new and optimized, go serverless, increase performance, or simply stay supported, then this tech talk is for you.&lt;/em&gt;&lt;/p&gt; &lt;h3&gt;Workshop: &lt;a href="https://appdevcloudworkshop.github.io/#/"&gt;Application Development in the Cloud&lt;/a&gt;&lt;/h3&gt; &lt;p&gt;&lt;i&gt;Ready to get hands-on with AppDev in the cloud with container-based services?&lt;/i&gt;&lt;/p&gt; &lt;p&gt;&lt;i&gt;&lt;/i&gt;&lt;i&gt;This workshop will let you experience the wonders of Red Hat&amp;#8217;s open technologies for cloud-based container application development, letting you integrate multiple services into a polyglot cloud solution. In this workshop, you&amp;#8217;re a developer working for Destinaisa, a travel agency that needs to set up its online bookings applications back-end services. You&amp;#8217;ll be given the Red Hat OpenShift Container Platform, and then you&amp;#8217;ll install Red Hat Decision Manager (formerly called (Red Hat JBoss BRMS) to work in the Destinasia discount rules.&lt;/i&gt;&lt;/p&gt; &lt;p&gt;&lt;i&gt;&lt;/i&gt;&lt;i&gt;Once the rules are completed, you leverage Ansible playbooks to see infrastructure automation in action. Each playbook will deploy a new container-based service to support flight, hotel, car, and discount rule queries from your application. In total, you will be running six container-based applications or services in a private PaaS before testing this solution with a REST client, sending a booking and verifying the discounts provided by the rules you implemented.&lt;/i&gt;&lt;/p&gt; &lt;h3&gt;Bonus&lt;/h3&gt; &lt;p&gt;There&amp;#8217;s also a good chance I&amp;#8217;ll be bringing a few copies of &lt;em&gt;&lt;a href="http://bit.ly/get-signed-copy-effective-business-process-management-with-jboss-bpm"&gt;Effective Business Process Management with JBoss BPM&lt;/a&gt;&lt;/em&gt; to give away and sign for some lucky attendees, so bring your laptop and see you in Scotland!&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F28%2Fapplication-modernization-and-migration-tech-talk-scotland-jbug-meetup%2F&amp;#38;linkname=Application%20Modernization%20and%20Migration%20Tech%20Talk%20%2B%20Scotland%20JBug%20Meetup" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F28%2Fapplication-modernization-and-migration-tech-talk-scotland-jbug-meetup%2F&amp;#38;linkname=Application%20Modernization%20and%20Migration%20Tech%20Talk%20%2B%20Scotland%20JBug%20Meetup" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F28%2Fapplication-modernization-and-migration-tech-talk-scotland-jbug-meetup%2F&amp;#38;linkname=Application%20Modernization%20and%20Migration%20Tech%20Talk%20%2B%20Scotland%20JBug%20Meetup" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F28%2Fapplication-modernization-and-migration-tech-talk-scotland-jbug-meetup%2F&amp;#38;linkname=Application%20Modernization%20and%20Migration%20Tech%20Talk%20%2B%20Scotland%20JBug%20Meetup" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F28%2Fapplication-modernization-and-migration-tech-talk-scotland-jbug-meetup%2F&amp;#38;linkname=Application%20Modernization%20and%20Migration%20Tech%20Talk%20%2B%20Scotland%20JBug%20Meetup" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F28%2Fapplication-modernization-and-migration-tech-talk-scotland-jbug-meetup%2F&amp;#38;linkname=Application%20Modernization%20and%20Migration%20Tech%20Talk%20%2B%20Scotland%20JBug%20Meetup" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F28%2Fapplication-modernization-and-migration-tech-talk-scotland-jbug-meetup%2F&amp;#38;linkname=Application%20Modernization%20and%20Migration%20Tech%20Talk%20%2B%20Scotland%20JBug%20Meetup" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F28%2Fapplication-modernization-and-migration-tech-talk-scotland-jbug-meetup%2F&amp;#38;linkname=Application%20Modernization%20and%20Migration%20Tech%20Talk%20%2B%20Scotland%20JBug%20Meetup" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F28%2Fapplication-modernization-and-migration-tech-talk-scotland-jbug-meetup%2F&amp;#38;title=Application%20Modernization%20and%20Migration%20Tech%20Talk%20%2B%20Scotland%20JBug%20Meetup" data-a2a-url="https://developers.redhat.com/blog/2018/05/28/application-modernization-and-migration-tech-talk-scotland-jbug-meetup/" data-a2a-title="Application Modernization and Migration Tech Talk + Scotland JBug Meetup"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/05/28/application-modernization-and-migration-tech-talk-scotland-jbug-meetup/"&gt;Application Modernization and Migration Tech Talk + Scotland JBug Meetup&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/KEwrS83FxJ0" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;I&amp;#8217;m heading back to my friends in Scotland to speak at the JBoss User Group (JBug) Scotland next month. It&amp;#8217;s a fun group of people who really seem to enjoy working with open source and JBoss software stacks. First off, on June 6th there will be a wonderful tech talk on application modernization and migration. This is followed [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/05/28/application-modernization-and-migration-tech-talk-scotland-jbug-meetup/"&gt;Application Modernization and Migration Tech Talk + Scotland JBug Meetup&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/05/28/application-modernization-and-migration-tech-talk-scotland-jbug-meetup/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">497357</post-id><dc:creator>Eric D. Schabell</dc:creator><dc:date>2018-05-28T09:00:13Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/05/28/application-modernization-and-migration-tech-talk-scotland-jbug-meetup/</feedburner:origLink></entry></feed>
